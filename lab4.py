string = 'ВКДЖЮТОДЧЮЫБМДЩХШЮДЖКФЭЫЧЮХШЭКУДКШФЫГТОБЮЕМШДЫШЯФОТЭОЕДЩХШЮШРБЩУОАДЩХШЮДЖКФЭЫЧЮЦШДЫЯФЮЭОФШЯЫФКБЮШЯКБМГКСЫЕОБОЮШДОШКЕДКРЮЕРЦШВШКЯФОТОБОДДКЮШЯФОТЭОЕДКЮШКАБЫРЕЮШСШЮДЖКФЭЫЧЮКДДКЮШРЮРЕОЭОШКДЫШЮЪФЫОЕШЕОЗДЮЬОРВЩХШФКБМШДКШООШФЫРВФИЕЮОШКРКАОДДКШКЯЫРДКШЯКРВКБМВЩШКДКШЬФОСЫЕКШЯКБЩЬОДЮОЭШДОРЫДВЧЮКДЮФКСЫДДКЪКШТКРЕЩЯЫШВКШСРОЮШЮДЖКФЭЫЧЮЮШСШЕКЭШЬЮРБОШЯФОТЭОЕДКЮШТЫУОШОРБЮШЮДЖКФЭЫЧЮЦШЗФЫДЮЕРЦШСШВКЭЯМХЕОФОШЮБЮШЯФОТДЫГДЫЬОДЫШТБЦШВКЭЯМХЕОФДКЪКШЮРЯКБМГКСЫДЮЦШЩЪФКГИШООШВКДЖЮТОДЧЮЫБМДКРЕЮШЭКЪЩЕШДКРЮЕМШДОВКЭЯМХЕОФДИЮШЮШСККАЙОШДОЕОЗДЮЬОРВЮЮШЗЫФЫВЕОФШЭДКЪЮЭШБХТЦЭШЯФЮЗКТЮЕРЦШСИРЕЩЯЫЕМШСШВЫЬОРЕСОШЯКБМГКСЫЕОБОЮШДОШКТДКЮШЫШЧОБКЪКШФЦТЫШРЮРЕОЭШЮДЖКФЭЫЧЮКДДИЗШРОФСЮРКСШОРБЮШТБЦШТКРЕЩЯЫШВШЕЫВЮЭШРЮРЕОЭЫЭШЮРЯКБМГЩХЕРЦШЭДКЪКФЫГКСИОШЯЫФКБЮШЮБЮШЮДЫЦШВКДЖЮТОДЧЮЫБМДЫЦШЮДЖКФЭЫЧЮЦШЕКШДЫСОФДЦВЫШЛЕЮШТЫДДИОШАЩТЩЕШЗФЫДЮЕМРЦШДОШЕКБМВКШСШЪКБКСОШДКШЮШСШГЫЯЮРДКЮШВДЮУВОШЮБЮШДЫШБЮРЕВЫЗШАЩЭЫЪЮШВКЕКФИОШЯКБМГКСЫЕОБМШЬЫРЕКШКРЕЫСБЦОЕШДЫШФЫАКЬОЭШРЕКБОШЫШЕКШЮШЯКЯФКРЕЩШЕОФЦОЕШЮШТОБКШГТОРМШДОШСШДОКФЪЫДЮГКСЫДДКРЕЮШБХТОЮШЫШСШЮГДЫЬЫБМДКЮШДОЯФЮЪКТДКРЕЮШЯЫФКБМДКЮШРЗОЭИШДОСКГЭКУДКШЯКЭДЮЕМШЭДКЪКШФЫГДИЗШЯЫФКБОЮШФОВКЭОДТЫЧЮЮШЯКШЮЗШФОЪЩБЦФДКЮШЯКШСКГЭКУДКРЕЮШЬЫРЕКЮШРЭОДОШЕКБМВКШЩРЩЪЩАБЦХЕШЯКБКУОДЮОШГЫРЕЫСБЦЦШЯФЮЭОДЦЕМШДОРБКУДИОШРЗОЭИШЬОФОТКСЫДЮЦШЮБЮШСККАЙОШРЕЫФЫЕМРЦШРСОРЕЮШТОБКШВШТСЩЭШЕФОЭШБОЪВКШГЫЯКЭЮДЫОЭИЭШЮШРЕКБМШУОШБОЪВКШЩЪЫТИСЫОЭИЭШЯЫФКБЦЭШКЯЮРЫДДИЮШВБЫРРШЩЦГСЮЭИЗШЭОРЕШЭКУДКШДЫГСЫЕМШФЫГЭОЙОДЮОЭШВКДЖЮТОДЧЮЫБМДИЗШТЫДДИЗШСШРФОТОШЪТОШЮЭШДОШКАОРЯОЬОДЫШГЫЬЫРЕЩХШЮШДОШЭКУОЕШАИЕМШДОКАЗКТЮЭЫЦШГЫЙЮЕЫШЩЪФКГЫШУОШРКРЕКЮЕШСШЕКЭШЬЕКШЭДКЪЮОШДОШКЕВЫУЩЕРЦШЩГДЫЕМШРОВФОЕИШВКЕКФИОШРЫЭЮШЯФКРЦЕРЦШСШФЩВЮШЯКЭЮЭКШЯЫФКБОЮШЗФЫДЦЙЮЗРЦШСШГЫЯЮРДИЗШВДЮУВЫЗШЯКБМГКСЫЕОБОЮШСШЛЕКЕШВБЫРРШЯКЯЫТЫОЕШЯОФОТЫЬЫШВКДЖЮТОДЧЮЫБМДИЗШТЫДДИЗШСШКЕВФИЕКЭШСЮТОШСШФЫГЪКСКФОШСШЯЮРМЭОШЯКШРОЕЮШВКЕКФЫЦШТОБЫОЕШСКГЭКУДИЭШЯОФОЗСЫЕШТЫДДИЗШТБЦШЫЕЫВЮШЭКЪЩЕШЮРЯКБМГКСЫЕМРЦШФЫГДИОШЕОЗДЮЬОРВЮОШРФОТРЕСЫШЯКТРБЩНЮСЫДЮОШЮБЮШЯФКРБЩНЮСЫДЮОШФЫГЪКСКФКСШЯЫРРЮСДКОШЯФКРБЩНЮСЫДЮОШРОЕЮШДКШЮТОЦШКТДЫШКРЩЙОРЕСЮЕМШТКРЕЩЯШВШТЫДДИЭШСШЕКЕШЭКЭОДЕШВКЪТЫШКДЮШДЫЮЭОДООШГЫЙЮЙОДИШРБЩУОАДЫЦШЮДЖКФЭЫЧЮЦШДЫЯФЮЭОФШЯЫФКБЮШЯКБМГКСЫЕОБОЮШДОШКЕДКРЮЕРЦШВШКЯФОТОБОДДКЮШЯФОТЭОЕДКЮШКАБЫРЕЮШСШЮДЖКФЭЫЧЮКДДКЮШРЮРЕОЭОШКДЫШЮЪФЫОЕШЕОЗДЮЬОРВЩХШФКБМ'

T = {
    'А' : 0,
    'Б' : 0,
    'В' : 0,
    'Г' : 0,
    'Д' : 0,
    'Е' : 0,
    'Ж' : 0,
    'З' : 0,
    'И' : 0,
    'К' : 0,
    'Л' : 0,
    'М' : 0,
    'Н' : 0,
    'О' : 0,
    'П' : 0,
    'Р' : 0,
    'С' : 0,
    'Т' : 0,
    'У' : 0,
    'Ф' : 0,
    'Х' : 0,
    'Ц' : 0,
    'Ч' : 0,
    'Ш' : 0,
    'Щ' : 0,
    'Ь' : 0,
    'Ы' : 0,
    'Ъ' : 0,
    'Э' : 0,
    'Ю' : 0,
    'Я' : 0,
    ' ' : 0,
}

alphabet = {
    'А' : 0.062,
    'Б' : 0.014,
    'В' : 0.038,
    'Г' : 0.013,
    'Д' : 0.025,
    'Е' : 0.072,
    'Ж' : 0.007,
    'З' : 0.016,
    'И' : 0.062,
    'К' : 0.028,
    'Л' : 0.035,
    'М' : 0.026,
    'Н' : 0.053,
    'О' : 0.09,
    'П' : 0.023,
    'Р' : 0.04,
    'С' : 0.045,
    'Т' : 0.053,
    'У' : 0.021,
    'Ф' : 0.002,
    'Х' : 0.009,
    'Ц' : 0.004,
    'Ч' : 0.012,
    'Ш' : 0.006,
    'Щ' : 0.003,
    'Ь' : 0.014,
    'Ы' : 0.016,
    'Ъ' : 0.014,
    'Э' : 0.003,
    'Ю' : 0.006,
    'Я' : 0.018,
    ' ' : 0.13
}

for i in string:
    for j in T.keys():
        if (j == i):
            T[j] = T[j] + 1
            break

for i in T.keys():
    T[i] = round(T[i] / len(string), 3)


alphabetSorted = sorted(alphabet.items(), key=lambda x: x[1])
TSorted = sorted(T.items(), key=lambda x: x[1])

print(TSorted)
A = []
B = []
stringNew = ''
for i in range(len(alphabetSorted)):
    A.append(alphabetSorted[i][0])
    B.append(TSorted[i][0])

C = dict(zip(B,A))

C['Д'] = 'Н'
C['Ы'] = 'А'
C['Л'] = 'О'
C['И'] = 'Ы'
C['Е'] = 'Т'
C['С'] = 'В'
C['З'] = 'Е'
C['У'] = 'Ж'
C['М'] = 'Ь'
C['Э'] = 'М'
C['Х'] = 'Х'
C['Я'] = 'П'
C['Ж'] = 'Ф'
C['Ь'] = 'Ь'
C['В'] = 'К'
C['Ц'] = 'Я'
C['Ч'] = 'Ц'
C['Щ'] = 'У'
C['Х'] = 'Ю'
C['Б'] = 'Л'
C['А'] = 'Б'
C['Ь'] = 'Ч'
C['Ъ'] = 'Г'
C['З'] = 'Х'
C['Н'] = 'Ш'

for x in C.keys():
    print(x, ' - ', C[x])

for i in string:
    for j in C.keys():
        if i == j:
            stringNew += C[j]

print(stringNew) 


    

# count = 0
# flag = True
# digram = {}
# for i in range(len(string)):
#     for j in range(len(string)-i):
#         if string[i:i+2] == string[j:j+2]:
#             count += 1
#     for x in digram.keys():
#         if x == string[i:i+2]:
#             flag = False
#     if flag:
#         digram[string[i:i+2]] = count
#     flag = True
#     count = 0

# for x in digram:
#     digram[x] = digram[x] / len(digram)

# digramSorted = dict(sorted(digram.items(), key=lambda x: x[1]))
# for x in digramSorted:
#     print(x, ' - ', digramSorted[x])


